name: Test
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
jobs:
  unit-test:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "22.2"
          elixir-version: "1.9.4"
      - run: mix deps.get
      - run: mix coveralls.github
  credo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "22.2"
          elixir-version: "1.9.4"
      - run: mix deps.get
      - run: mix credo
  dialyzer:
    name: Run Dialyzer for type checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: "22.2"
          elixir-version: "1.9.4"
      - name: Fetch dependencies
        run: mix deps.get
      - name: Restore PLT cache
        uses: actions/cache@v2
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts
      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer
